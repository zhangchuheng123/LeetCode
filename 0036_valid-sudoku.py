# 请你判断一个 9x9 的数独是否有效。只需要 根据以下规则 ，验证已经填入的数字是否有效即可。

# 数字 1-9 在每一行只能出现一次。
# 数字 1-9 在每一列只能出现一次。
# 数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。（请参考示例图）
# 数独部分空格内已填入了数字，空白格用 '.' 表示。

# 注意：
# 一个有效的数独（部分已被填充）不一定是可解的。
# 只需要根据以上规则，验证已经填入的数字是否有效即可。

class Solution:
    def isValidSudoku(self, board):
        row = [0b1 for _ in range(9)]
        col = [0b1 for _ in range(9)]
        box = [0b1 for _ in range(9)]

        for r in range(9):
            for c in range(9):
                b = (r // 3) * 3 + (c // 3)
                digit = board[r][c]
                if digit == '.':
                    continue
                digit = ord(digit) - ord('0')

                spec = 0b1 << digit

                if (row[r] & spec) | (col[c] & spec) | (box[b] & spec):
                    return False
                else:
                    row[r] |= spec
                    col[c] |= spec
                    box[b] |= spec

        return True

if __name__ == '__main__':
    board = \
        [["5","3",".",".","7",".",".",".","."]
        ,["6",".",".","1","9","5",".",".","."]
        ,[".","9","8",".",".",".",".","6","."]
        ,["8",".",".",".","6",".",".",".","3"]
        ,["4",".",".","8",".","3",".",".","1"]
        ,["7",".",".",".","2",".",".",".","6"]
        ,[".","6",".",".",".",".","2","8","."]
        ,[".",".",".","4","1","9",".",".","5"]
        ,[".",".",".",".","8",".",".","7","9"]]
    print(Solution().isValidSudoku(board))

    board = \
        [["8","3",".",".","7",".",".",".","."]
        ,["6",".",".","1","9","5",".",".","."]
        ,[".","9","8",".",".",".",".","6","."]
        ,["8",".",".",".","6",".",".",".","3"]
        ,["4",".",".","8",".","3",".",".","1"]
        ,["7",".",".",".","2",".",".",".","6"]
        ,[".","6",".",".",".",".","2","8","."]
        ,[".",".",".","4","1","9",".",".","5"]
        ,[".",".",".",".","8",".",".","7","9"]]
    print(Solution().isValidSudoku(board))
